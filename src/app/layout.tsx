"use client";
import { ReactNode } from "react";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import "./globals.css";
import { Provider } from "react-redux";
import { store } from "../../store/store";
import { Poppins } from 'next/font/google';
import localFont from 'next/font/local';
interface RootLayoutProps {
  children: ReactNode;
}

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
// Initialize Poppins
const poppins = Poppins({
  subsets: ['latin'],
  weight: ['400',"500",'600', '700', '800'],
  display: 'swap',
  style: ['normal', 'italic'],
  variable: '--font-poppins', // For Tailwind or CSS
});
// Initialize SF UI Display with all weights
// const sf = localFont({
//   src: [
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-ultralight.otf',
//       weight: '100',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-light.otf',
//       weight: '300',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-regular.otf',
//       weight: '400',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-medium.otf',
//       weight: '500',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-semibold.otf',
//       weight: '600',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-bold.otf',
//       weight: '700',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-heavy.otf',
//       weight: '800',
//       style: 'normal',
//     },
//     {
//       path: '/assets/fonts/sf-ui-display/sf-ui-display-black.otf',
//       weight: '900',
//       style: 'normal',
//     },
//   ],
//   variable: '--font-sf',
// });
export default function RootLayout({ children }: RootLayoutProps) {
  return (
    <html lang="en">
      <head>
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap"
        />
        {/* <link rel="icon" href="./favicon.ico" /> */}
      </head>
      <body className={`${poppins.variable} `}>
        <Provider store={store}>{children}</Provider>
      </body>
    </html>
  );
}
